#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_ARB_shading_language_include : require

struct CameraMatrixParams {
    mat4 view_inv;
    mat4 proj_inv;
};

layout(set = 0, binding = 0) uniform accelerationStructureEXT tlas;
layout(set = 0, binding = 1) uniform camera_matrix_ubo { CameraMatrixParams cam; };

layout(set = 1, binding = 0, rgba8) uniform image2D image;

layout(location = 0) rayPayloadEXT vec3 hit_value;

void main() {
    const vec2 pixel_center = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 uv = pixel_center / vec2(gl_LaunchSizeEXT.xy);
    vec2 d = uv * 2.0 - 1.0;

    vec4 origin = cam.view_inv * vec4(0, 0, 0, 1);
    vec4 target = cam.proj_inv * vec4(d.x, d.y, 1, 1);
    vec4 direction = cam.view_inv * vec4(normalize(target.xyz), 0);

    float tmin = 0.001;
    float tmax = 10000.0;

    hit_value = vec3(0.0);

    traceRayEXT(tlas, gl_RayFlagsOpaqueEXT, 0xff, 0, 0, 0, origin.xyz, tmin, direction.xyz, tmax,
                0);

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(hit_value, 0.0));
}