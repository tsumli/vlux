#version 460

#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_buffer_reference2 : require
#extension GL_EXT_scalar_block_layout : require
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require

hitAttributeEXT vec2 attribs;

layout(set = 1, binding = 1) uniform sampler2D base_colors[];

layout(location = 3) rayPayloadInEXT uint payload_seed;

#include "bufferreferences.glsl"
#include "geometry_node.glsl"
#include "geometrytypes.glsl"
#include "random.glsl"

void main() {
    Triangle tri = UnpackTriangle(gl_PrimitiveID);
    GeometryNode geometry_node = geometry_nodes.nodes[gl_InstanceID];
    vec4 base_color =
        texture(base_colors[nonuniformEXT(geometry_node.texture_index_base_color)], tri.uv);
    if (rnd(payload_seed) > base_color.a) {
        ignoreIntersectionEXT;
    }
}